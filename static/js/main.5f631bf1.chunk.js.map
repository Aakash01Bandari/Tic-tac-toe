{"version":3,"sources":["Square.js","Board.js","Points.js","Winner.js","Game.js","index.js"],"names":["Square","props","react_default","a","createElement","className","concat","winnerClass","onClick","disabled","value","Board","row","col","board","cellCounter","i","columns","j","push","this","renderSquare","key","_this","winnerSquares","src_Square","squares","createBoard","React","Component","getPoints","0","1","2","3","4","5","6","7","8","calculateWinner","lines","length","_lines$i","Object","slicedToArray","b","c","winner","winnerRow","Game","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","history","Array","fill","currentStepNumber","xIsNext","handleClick","bind","assertThisInitialized","resetMoves","jumpTo","slice","setState","currentLocation","stepNumber","step","status","_this2","current","_calculateWinner","moves","map","move","desc","classButton","src_Board","ReactDOM","render","src_Game","document","getElementById"],"mappings":"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","file":"static/js/main.5f631bf1.chunk.js","sourcesContent":["import React from 'react';\n\nconst Square = props => (\n    <button className={`${props.winnerClass} square`} onClick={props.onClick} disabled={props.disabled}>\n        {props.value}\n    </button>\n);\n\nexport default Square;\n","import React from 'react';\nimport Square from './Square';\n\nclass Board extends React.Component {\n    createBoard(row, col) {\n        const board = [];\n        let cellCounter = 0;\n\n        for (let i = 0; i < row; i += 1) {\n            const columns = [];\n            for (let j = 0; j < col; j += 1) {\n                columns.push(this.renderSquare(cellCounter++));\n            }\n            board.push(<div key={i} className=\"board-row\">{columns}</div>);\n        }\n\n        return board;\n    }\n\n    renderSquare(i) {\n        const winnerClass =\n            this.props.winnerSquares &&\n            (this.props.winnerSquares[0] === i ||\n                this.props.winnerSquares[1] === i ||\n                this.props.winnerSquares[2] === i)\n                ? 'square--green'\n                : '';\n\n        return (\n            <Square\n                disabled={this.props.disabled}\n                winnerClass={winnerClass}\n                key={i}\n                value={this.props.squares[i]}\n                onClick={() => this.props.onClick(i)}\n            />\n        );\n    }\n\n    render() {\n        return <div className=\"group-square\">{this.createBoard(3, 3)}</div>;\n    }\n}\n\nexport default Board;\n","import React from 'react';\n\nconst getPoints = (props) => {\n    const points = {\n        0: 'row: 1, col: 1',\n        1: 'row: 1, col: 2',\n        2: 'row: 1, col: 3',\n        3: 'row: 2, col: 1',\n        4: 'row: 2, col: 2',\n        5: 'row: 2, col: 3',\n        6: 'row: 3, col: 1',\n        7: 'row: 3, col: 2',\n        8: 'row: 3, col: 3',\n    };\n\n    return points[props];\n};\nexport default getPoints;","import React from 'react';\n\nconst calculateWinner = (squares) => {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n\n    for (let i = 0; i < lines.length; i += 1) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return {\n                winner: squares[a],\n                winnerRow: lines[i],\n            };\n        }\n    }\n\n    return {\n        winner: null,\n        winnerRow: null,\n    };\n};\n\nexport default calculateWinner;","import React from 'react';\nimport Board from './Board';\nimport getPoints from './Points'\nimport calculateWinner from './Winner'\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [\n                {\n                    squares: Array(9)\n                        .fill(null),\n                },\n            ],\n            currentStepNumber: 0,\n            xIsNext: true,\n        };\n        this.handleClick = this.handleClick.bind(this);\n        this.resetMoves = this.resetMoves.bind(this);\n        this.jumpTo = this.jumpTo.bind(this);\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.currentStepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            history: history.concat([\n                {\n                    squares,\n                    currentLocation: getPoints(i),\n                    stepNumber: history.length,\n                },\n            ]),\n            xIsNext: !this.state.xIsNext,\n            currentStepNumber: history.length,\n        });\n    }\n\n    resetMoves() {\n        this.setState({\n            history: [\n                {\n                    squares: [],\n                },\n            ],\n            currentStepNumber: 0,\n        });\n    }\n    jumpTo(step) {\n        this.setState({\n            currentStepNumber: step,\n            xIsNext: step % 2 === 0,\n        });\n    }\n    render() {\n        const {history} = this.state;\n        const current = history[this.state.currentStepNumber];\n        const {winner, winnerRow} = calculateWinner(current.squares);\n        const moves = history.map((step,move)=>{\n            const currentLocation = step.currentLocation ? `(${step.currentLocation})` : '';\n            const desc = step.stepNumber ? `Go to move ${step.stepNumber}` : 'Go to game start';\n            const classButton = move === this.state.currentStepNumber ? 'button--green' : '';\n            return(\n                <li key={step.stepNumber}>\n                    <button className={`${classButton} button`} onClick={() => this.jumpTo(move)}>\n                        {`${desc} ${currentLocation}`}\n                    </button>\n                </li>\n            )\n        })\n        let status;\n        if (winner) {\n            status = `Winner ${winner}`;\n        } else if (history.length === 10) {\n            status = 'Game Draw';\n        } else {\n            status = `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\n        }\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <div className=\"title\">Tic Tac Toe</div>\n                    <Board\n                        disabled={winner ? true : false}\n                        squares={current.squares}\n                        winnerSquares={winnerRow}\n                        onClick={i => this.handleClick(i)}\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n                <div className=\"reset\">\n                    <button className=\"button\" onClick={() => this.resetMoves()}>\n                        Reset\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Game;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\n\nReactDOM.render(<Game />, document.getElementById('root'));\n\n"],"sourceRoot":""}